{"version":3,"sources":["pages/Home.js","components/Input.js","pages/Login.js","pages/Register.js","pages/Dashboard.js","pages/NotAuth.js","App.js","index.js"],"names":["Homepage","navigate","useNavigate","className","onClick","InputField","name","label","control","type","render","field","fieldState","invalid","error","isTouched","htmlFor","id","message","PasswordField","useState","show","setShow","LoginSchema","yup","shape","username","required","min","max","password","matches","Login","userLogin","useForm","resolver","yupResolver","mode","handleSubmit","setError","onSubmit","data","res","status","msg","style","float","RegisterSchema","email","confirmPassword","oneOf","Register","userRegister","Dashboard","userLogout","NotAuth","authContext","createContext","RequireAuth","children","auth","useContext","useEffect","App","users","setUsers","setAuth","Provider","value","path","element","Home","verifyUser","user","find","newUser","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72f87026.chunk.js","sourcesContent":["import { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Homepage() {\r\n    let navigate = useNavigate();\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <h1>Home</h1>\r\n            <p>This is the homepage.</p>\r\n            <button className=\"btn\" onClick={() => navigate(\"/login\")}>login</button>\r\n        </div>\r\n    );\r\n};\r\nexport default Homepage;","import { Controller } from \"react-hook-form\";\r\nimport { useState } from \"react\";\r\n\r\nexport function InputField({ name, label=name, control, type=\"text\"}) {\r\n\r\n    return (\r\n        <Controller\r\n            name={name}\r\n            control={control}\r\n            render={({ field, fieldState: {invalid, error, isTouched} }) => (\r\n                <div className=\"input-field\">\r\n                    <label className=\"input-label\" htmlFor={name}>\r\n                        {label}\r\n                    </label>\r\n                    <br />\r\n                    <input className={\"input-control \" + (invalid ? \"input-control-invalid\" : (isTouched && \"input-control-valid\"))} id={name} type={type} {...field}/>\r\n                    <p className=\"helper-text\">{error && (\"⚠ \" + error.message)}&nbsp;</p>\r\n                </div>\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport function PasswordField({ name, label=name, control}) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    return (\r\n        <Controller\r\n            name={name}\r\n            control={control}\r\n            render={({ field, fieldState: {invalid, error, isTouched} }) => (\r\n                <div className=\"input-field\">\r\n                    <label className=\"input-label\" htmlFor={name}>\r\n                        {label}\r\n                    </label>\r\n                    <br />\r\n                    <input className={\"input-control \" + (invalid ? \"input-control-invalid\" : (isTouched && \"input-control-valid\"))} id={name} type={show ? \"text\" : \"password\"} {...field}/>\r\n                    <button className=\"show-password\" type=\"button\" onClick={() => setShow(!show)}>{show ? \"hide\" : \"show\"}</button>\r\n                    <p className=\"helper-text\">{error && (\"⚠ \" + error.message)}&nbsp;</p>\r\n                </div>\r\n            )}\r\n        />\r\n    );\r\n}\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { InputField, PasswordField } from \"../components/Input\";\r\n\r\nconst LoginSchema = yup.object().shape({\r\n    username: yup.string().required().min(5).max(10),\r\n    password: yup.string().required().min(8).max(16).matches(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,16}$\", \"password must has at least 1 uppercase letter, 1 lowercase letter, 1 number and 1 special character\"),\r\n});\r\n\r\nfunction Login({ userLogin }) {\r\n    const { handleSubmit, control, setError } = useForm({\r\n        resolver: yupResolver(LoginSchema),\r\n        mode: \"onTouched\",\r\n    });\r\n\r\n    let navigate = useNavigate();\r\n\r\n    function submitHanlder(data) {\r\n        // verify user info\r\n        let res = userLogin(data);\r\n        if (res.status === 200) {\r\n            // valid info\r\n            navigate(\"/dashboard\");\r\n        } else {\r\n            setError(res.name, {\r\n                type: \"manual\",\r\n                message: res.msg,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-form\">\r\n            <form onSubmit={handleSubmit(submitHanlder)}>\r\n                <p className=\"form-title\">\r\n                    Login in to post-viewer\r\n                </p>\r\n                <br />\r\n                <InputField name=\"username\" control={control} />\r\n                <PasswordField name=\"password\" control={control} />\r\n                <br />\r\n                <div>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn\"\r\n                        onClick={() => navigate(\"/register\")}\r\n                    >\r\n                        register\r\n                    </button>\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn\"\r\n                        style={{ float: \"right\" }}\r\n                    >\r\n                        login\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { InputField, PasswordField } from \"../components/Input\";\r\n\r\nconst RegisterSchema = yup.object().shape({\r\n    username: yup.string().required().min(5).max(10),\r\n    email: yup.string().required().email(),\r\n    password: yup.string().required().min(8).max(16).matches(\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,16}$\", \"password must has at least 1 uppercase letter, 1 lowercase letter, 1 number and 1 special character\"),\r\n    confirmPassword: yup\r\n        .string()\r\n        .required()\r\n        .oneOf([yup.ref(\"password\"), null], \"must match password.\"),\r\n});\r\n\r\nfunction Register({ userRegister }) {\r\n    const { handleSubmit, control, setError } = useForm({\r\n        resolver: yupResolver(RegisterSchema),\r\n        mode: \"onTouched\",\r\n    });\r\n\r\n    let navigate = useNavigate();\r\n\r\n    function submitHanlder(data) {\r\n        // verify user info\r\n        let res = userRegister(data);\r\n        if (res.status === 200) {\r\n            // valid info\r\n            navigate(\"/login\");\r\n        } else {\r\n            setError(res.name, {\r\n                type: \"manual\",\r\n                message: res.msg,\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-form\">\r\n            <form onSubmit={handleSubmit(submitHanlder)}>\r\n                <p className=\"form-title\">Register for post-viewer</p>\r\n                <br />\r\n                <InputField name=\"username\" control={control} />\r\n                <InputField name=\"email\" control={control} type=\"email\" />\r\n                <PasswordField name=\"password\" control={control} />\r\n                <PasswordField name=\"confirmPassword\" label=\"confirm password\" control={control} />\r\n                <br />\r\n                <div>\r\n                    <button\r\n                        className=\"btn\"\r\n                        type=\"button\"\r\n                        onClick={() => navigate(-1)}\r\n                    >\r\n                        cancel\r\n                    </button>\r\n                    <button\r\n                        className=\"btn\"\r\n                        type=\"submit\"\r\n                        style={{ float: \"right\" }}\r\n                    >\r\n                        confirm\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","import { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Dashboard({userLogout}) {\r\n    let navigate = useNavigate();\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <h1>Dashboard</h1>\r\n            <p>This is the dashboard.</p>\r\n            <button className=\"btn\" type=\"button\" onClick={() => {userLogout(); navigate(\"/\");}}>logout</button>\r\n        </div>\r\n    );\r\n};\r\nexport default Dashboard;","import { useNavigate } from \"react-router-dom\";\r\n\r\nfunction NotAuth() {\r\n    let navigate = useNavigate();\r\n\r\n    return (\r\n        <div className=\"page\">\r\n            <h1>Unauthorized</h1>\r\n            <p>You havn't loggin.</p>\r\n            <button className=\"btn\" onClick={() => navigate(\"/login\")}>\r\n                login\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\nexport default NotAuth;\r\n","import \"./App.css\";\nimport { Route, Routes, useNavigate, HashRouter } from \"react-router-dom\";\nimport { useState, createContext, useContext, useEffect } from \"react\";\nimport Homepage from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Dashboard from \"./pages/Dashboard\";\nimport NotAuth from \"./pages/NotAuth\";\n\nconst authContext = createContext(false);\n\nfunction RequireAuth({ children, ...rest }) {\n    let auth = useContext(authContext);\n    let navigate = useNavigate();\n\n    useEffect(() => {\n        if (!auth) {\n            navigate(\"/notAuth\");\n        }\n    });\n    return children;\n}\n\nfunction App() {\n    // contain all user info\n    const [users, setUsers] = useState([\n        {\n            username: \"admin\",\n            password: \"Testing193!\",\n        },\n    ]);\n    const [auth, setAuth] = useState(false);\n\n    function createUser(newUser) {\n        // check username\n        if (users.find((user) => user.username === newUser.username)) {\n            return {\n                status: 400,\n                name: \"username\",\n                msg: \"username is already exist.\",\n            };\n        }\n\n        // add new user\n        setUsers([...users, newUser]);\n\n        // redirect to login page\n        return {\n            status: 200,\n            msg: \"create account successfully.\",\n        };\n    }\n\n    function login(verifyUser) {\n        // check username\n        let user = users.find((user) => user.username === verifyUser.username);\n        if (user) {\n            // check password\n            if (user.password === verifyUser.password) {\n                // redirect to dashbord\n                setAuth(true);\n                return {\n                    status: 200,\n                    msg: \"Login successfully.\",\n                };\n            } else {\n                return {\n                    status: 400,\n                    name: \"password\",\n                    msg: \"Invalid password.\",\n                };\n            }\n        } else {\n            return {\n                status: 400,\n                name: \"username\",\n                msg: \"username is not exist.\",\n            };\n        }\n    }\n\n    function logout() {\n        setAuth(false);\n    }\n\n    return (\n        <authContext.Provider value={auth}>\n            <HashRouter>\n                <Routes>\n                    <Route path=\"/\" element={<Homepage />} />\n                    <Route path=\"login\" element={<Login userLogin={login} />} />\n                    <Route\n                        path=\"register\"\n                        element={<Register userRegister={createUser} />}\n                    />\n                    <Route path=\"notAuth\" element={<NotAuth />} />\n                    <Route\n                        path=\"dashboard\"\n                        element={\n                            <RequireAuth>\n                                <Dashboard userLogout={logout} />\n                            </RequireAuth>\n                        }\n                    />\n                </Routes>\n            </HashRouter>\n        </authContext.Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}